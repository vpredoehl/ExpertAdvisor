drop function if exists relative_strength_index cascade;
create type rsi_type as ( date timestamp without time zone, n int, rsi numeric(10,6));

create or replace function relative_strength_index() returns setof rsi_type
as $$
declare
	avg_gl record;
	gl_row record;
	avg_row record;
	rsi_row record;
	avg_gain numeric(10,6);
	avg_loss numeric(10,6);
	rs real;
	rsi real;
begin
with t2 as (
with t as ( select ts_trunc, tf, open, close, close > open as gain, open > close as loss from candlestick('rsi2', 1, 'day', '2009-06-01', '2010-06-03') )
        select ts_trunc, tf, gain, loss,
        close - open as diff_gain, 
        open - close as diff_loss
        from t order by ts_trunc, tf limit 14
)
select * from (
select row_number() over (), sum(diff_gain) filter( where gain = true) / 14  as avg_gain, sum(diff_loss) filter ( where loss = true ) / 14  as avg_loss from t2 ) as jt1
inner join (
with t3 as ( -- join associated data with first average calculation
	select  ts_trunc, tf from candlestick('rsi2', 1, 'day', '2009-06-01', '2010-06-03') offset 14 limit 1)
		select row_number() over (),* from t3
) as jt2
using(row_number) into avg_gl;

select avg_gl.avg_gain / avg_gl.avg_loss into rs ;
select 100 - 100 / (rs + 1) into rsi;
select avg_gl.ts_trunc as date, avg_gl.tf as n, rsi::numeric(10,6) into rsi_row;
return next rsi_row;

select avg_gl.avg_gain into avg_gain;
select avg_gl.avg_loss into avg_loss;

for gl_row in 
with t as ( select ts_trunc, tf, open, close, close > open as gain, open > close as loss from candlestick('rsi2', 1, 'day', '2009-06-01', '2019-06-03') )
        select ts_trunc, tf,
        case when gain=true then close - open
        else 0 end::numeric(10,6) as diff_gain, 
        case when loss=true then open - close
        else 0 end::numeric(10,6) as diff_loss
        from t order by ts_trunc, tf offset 15 -- offset to point where iterative avg_gain should be caluclated
LOOP
	select gl_row.ts_trunc, gl_row.tf,
		 (avg_gain*13 + gl_row.diff_gain)/14 as avg_gain,
		 (avg_loss*13 + gl_row.diff_loss)/14 as avg_loss
	 into avg_row ;

	select avg_row.avg_gain into avg_gain;
	select avg_row.avg_loss into avg_loss;

	select avg_row.avg_gain / avg_row.avg_loss into rs ;
	select 100 - 100 / (rs + 1) into rsi;
	select avg_row.ts_trunc as date, avg_row.tf as n, rsi::numeric(10,6) into rsi_row;
	return next rsi_row;
END LOOP;
end;
$$
language 'plpgsql';
