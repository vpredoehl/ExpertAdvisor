do $code$
declare
	f text;
	qs text;
	qs2 text;
	tbl text;
	key text;
	ispopulated boolean;
	pair cursor(key text) for select tablename from pg_tables  where tablename like key  order by tablename;
begin
	FOR y in 2000..2030 LOOP
	select substring('''%' || y || '%''',2,6) into key;
	FOR f in pair(key)
	LOOP
		select substring(f::text, 2, 11) into tbl;
		raise info 'f: %, tbl: %', f, tbl;
		qs = format('refresh materialized view %I_fractal1m', tbl);
		begin
			qs2 = format('select ispopulated from pg_matviews where matviewname like ''%I_fractal1m''', tbl);
			execute qs2 into ispopulated;
			raise info '% fractal1m ispopulated: %', tbl, ispopulated;	
			if ispopulated is not true then
				raise info 'executing: %', qs;
				execute  qs;
			end if;
		exception when others then 
			raise notice '% %', SQLERRM, SQLSTATE;
		end;
		qs = format('refresh materialized view %I_fractal5m', tbl);
		begin
			qs2 = format('select ispopulated from pg_matviews where matviewname like ''%I_fractal5m''', tbl);
			execute qs2 into ispopulated;
			raise info '% fracta5m ispopulated: %', tbl, ispopulated;	
			if ispopulated is not true then
				raise info 'executing: %', qs;
				execute  qs;
			end if;
		exception when others then 
			raise notice '% %', SQLERRM, SQLSTATE;
		end;
		qs = format('refresh materialized view %I_fractal15m', tbl);
		begin
			qs2 = format('select ispopulated from pg_matviews where matviewname like ''%I_fractal15m''', tbl);
			execute qs2 into ispopulated;
			raise info '% fractal15m ispopulated: %', tbl, ispopulated;	
			if ispopulated is not true then
				raise info 'executing: %', qs;
				execute  qs;
			end if;
		exception when others then 
			raise notice '% %', SQLERRM, SQLSTATE;
		end;
		qs = format('refresh materialized view %I_fractal1hr', tbl);
		begin
			qs2 = format('select ispopulated from pg_matviews where matviewname like ''%I_fractal1hr''', tbl);
			execute qs2 into ispopulated;
			raise info '% fractal1hr ispopulated: %', tbl, ispopulated;	
			if ispopulated is not true then
				raise info 'executing: %', qs;
				execute  qs;
			end if;
		exception when others then 
			raise notice '% %', SQLERRM, SQLSTATE;
		end;
		qs = format('refresh materialized view %I_fractal4hr', tbl);
		begin
			qs2 = format('select ispopulated from pg_matviews where matviewname like ''%I_fractal4hr''', tbl);
			execute qs2 into ispopulated;
			raise info '% fractal4hr ispopulated: %', tbl, ispopulated;	
			if ispopulated is not true then
				raise info 'executing: %', qs;
				execute  qs;
			end if;
		exception when others then 
			raise notice '% %', SQLERRM, SQLSTATE;
		end;
		qs = format('refresh materialized view %I_fractal1day', tbl);
		begin
			qs2 = format('select ispopulated from pg_matviews where matviewname like ''%I_fractal1day''', tbl);
			execute qs2 into ispopulated;
			raise info '% fractal1day ispopulated: %', tbl, ispopulated;	
			if ispopulated is not true then
				raise info 'executing: %', qs;
				execute  qs;
			end if;
		exception when others then 
			raise notice '% %', SQLERRM, SQLSTATE;
		end;
		COMMIT;
	END LOOP;
	END LOOP;
end $code$
language 'plpgsql';


